version: "3.8"

services:
  db:
    build:
      dockerfile: docker/postgres/Dockerfile
      context: .
    environment:
      POSTGRES_DB: "${DATABASE_HOST}"
      POSTGRES_USER: "${DATABASE_USER}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
  api:
    build:
      dockerfile: docker/api/Dockerfile
      context: .
    environment:
      DEPLOYMENT_COLOR: "${IDLE_COLOR}"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:${PORT} --settings=djangoprod.settings"
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - .:/code
    depends_on:
      - db
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}" # host.docker.internal
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana/config/grafana.ini:/etc/grafana/grafana.ini
      - grafana-storage:/var/lib/grafana grafana/grafana
    environment:
      - "GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}"
      - "GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP}"
      - "GF_SERVER_DOMAIN=${GF_SERVER_DOMAIN}"
      - "GF_SMTP_ENABLED=${GF_SMTP_ENABLED}"
      - "GF_SMTP_HOST=${GF_SMTP_HOST}"
      - "GF_SMTP_USER=${GF_SMTP_USER}"
      - "GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}"
      - "GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS}"

volumes:
  pgdata:
  grafana-storage: